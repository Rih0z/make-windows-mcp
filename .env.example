# Windows MCP Server Configuration (with NordVPN Mesh Network Support)
# Copy this file to .env and fill in your actual values

# === Local Windows VM Settings ===
# Windows VM IP address (for local VM)
WINDOWS_VM_IP=192.168.1.100

# MCP Server port configuration
# Options:
#   - Leave empty or set to 'auto' for automatic server discovery (RECOMMENDED)
#   - Set specific port (e.g., 8080) to force that port
#   - Smart discovery will find any running MCP server automatically
MCP_SERVER_PORT=auto

# === NordVPN Mesh Network Settings ===
# Enable NordVPN mesh network support
NORDVPN_ENABLED=false

# NordVPN mesh network host IPs (comma-separated)
# Example: NORDVPN_HOSTS=192.168.1.100,192.168.1.101,10.5.0.2
NORDVPN_HOSTS=

# Remote Windows authentication
REMOTE_USERNAME=Administrator
REMOTE_PASSWORD=

# SSH connection settings
SSH_TIMEOUT=30000
MAX_CONNECTIONS=5

# === Security Settings (REQUIRED for production) ===
# Authentication token - Generate a strong random token
# Example: openssl rand -hex 32
# Leave empty for development only
MCP_AUTH_TOKEN=

# === Optional Security Settings ===
# Allowed IP addresses (comma-separated, leave empty to allow all)
# Example: ALLOWED_IPS=192.168.1.50,192.168.1.51,10.5.0.0/24
ALLOWED_IPS=

# Allowed build paths (comma-separated)
# Default: Z:\,C:\projects\,C:\build
# Enterprise: Add your project directories (e.g., C:\builds\,/Users/username/Documents/Projects/)
ALLOWED_BUILD_PATHS=Z:\,C:\projects\,C:\build\,C:\builds\

# CORS allowed origins (comma-separated)
# Example: ALLOWED_ORIGINS=http://localhost:3000,https://myapp.com
ALLOWED_ORIGINS=

# Logging level (error, warn, info, debug)
LOG_LEVEL=info

# === Rate Limiting Settings ===
# Maximum requests per time window (default: 60, set to 0 to disable)
RATE_LIMIT_REQUESTS=60

# Time window in milliseconds (default: 60000 = 1 minute)
RATE_LIMIT_WINDOW=60000

# === SSL/TLS Settings ===
# Enable HTTPS (requires SSL certificates)
ENABLE_HTTPS=false

# SSL certificate paths (required if HTTPS enabled)
SSL_CERT_PATH=
SSL_KEY_PATH=

# === Monitoring Settings ===
# Enable security monitoring
ENABLE_SECURITY_MONITORING=true

# Maximum log file size in bytes (default: 10MB)
MAX_LOG_SIZE=10485760

# Maximum number of log files to keep
MAX_LOG_FILES=5

# === Performance Settings ===
# Command execution timeout in milliseconds (default: 30 minutes)
COMMAND_TIMEOUT=1800000

# PDF Processing Support
# Maximum timeout for PDF conversion operations (default: 10 minutes)
PDF_PROCESSING_TIMEOUT=600000

# Absolute maximum allowed timeout (default: 60 minutes)
MAX_ALLOWED_TIMEOUT=3600000

# Maximum concurrent SSH connections
MAX_SSH_CONNECTIONS=5

# === Tool-Specific Timeout Settings ===
# PowerShell default timeout in seconds (default: 300 = 5 minutes)
POWERSHELL_DEFAULT_TIMEOUT=300

# PowerShell maximum timeout in seconds (default: 1800 = 30 minutes)
POWERSHELL_MAX_TIMEOUT=1800

# .NET build timeout in milliseconds (default: 600000 = 10 minutes)
DOTNET_BUILD_TIMEOUT=600000

# C++ build timeout in milliseconds (default: 600000 = 10 minutes)
CPP_BUILD_TIMEOUT=600000

# === Build Configuration ===
# Base directory for all builds (default: C:\build)
BUILD_BASE_DIR=C:\\build

# Default MCP server installation path (default: C:\mcp-server)
MCP_SERVER_PATH=C:\\mcp-server

# === Server Configuration ===
# Default server port when not using auto-discovery (default: 8080)
DEFAULT_SERVER_PORT=8080

# PHP development server port (default: 8000)
PHP_SERVE_PORT=8000

# SSH connection port (default: 22)
SSH_PORT=22

# === File Upload Limits ===
# Maximum file size for uploads in bytes (default: 52428800 = 50MB)
FILE_ENCODING_MAX_UPLOAD=52428800

# === Development Mode Settings ===
# Allow common development commands while maintaining security
# This is safer than dangerous mode but more flexible than default
ENABLE_DEV_COMMANDS=false

# Allowed development commands (comma-separated)
# Default includes common read-only and development tools
# Example: tasklist,netstat,type,python,if,for,findstr
ALLOWED_DEV_COMMANDS=tasklist,netstat,type,python,pip,node,npm,git,if,for,findstr,echo,set,call,start,cd,cmd,&

# Restrict development commands to specific paths
# Example: C:\\builds\\,C:\\projects\\,C:\\dev\\
DEV_COMMAND_PATHS=C:\\builds\\,C:\\projects\\,C:\\dev\\

# Allowed directories for batch file execution (semicolon-separated)
# Used by run_batch tool to restrict batch file execution to specific directories
# Example: C:\\builds\\;C:\\builds\\AIServer\\;C:\\Users\\Public\\;C:\\temp\\
ALLOWED_BATCH_DIRS=C:\\builds\\;C:\\builds\\AIServer\\;C:\\Users\\Public\\;C:\\temp\\

# === File Encoding Settings ===
# Base64 file encoding maximum size in bytes (default: 10MB)
# Used by encode_file_base64 tool to limit file size for encoding
FILE_ENCODING_MAX_SIZE=10485760

# === Enterprise Development Environment Settings ===
# Enable enterprise development mode for advanced testing and CI/CD
# This provides more flexibility while maintaining security
ENABLE_ENTERPRISE_DEV_MODE=false

# Flexible project path validation for enterprise environments
# When enabled, allows additional project directories beyond default build paths
# Supports both Windows and Unix-style paths for cross-platform development
ENTERPRISE_PROJECT_PATHS=/Users/*/Documents/Projects/*,C:\\builds\\*,C:\\projects\\*,/home/*/projects/*,/workspace/*

# Enhanced PowerShell syntax support
# Enable Bash-style command chaining (&&, ||) and complex syntax
ENABLE_ENHANCED_POWERSHELL=false

# Python environment enhancement settings
# Enable PYTHONPATH management and virtual environment automation
ENABLE_PYTHON_ENV_MANAGEMENT=false

# Automatic PYTHONPATH resolution for Python testing
# Helps resolve module import issues in complex project structures
PYTHON_AUTO_PATH_RESOLUTION=false

# JSON escaping enhancement for complex commands
# Improves handling of complex PowerShell commands with special characters
ENABLE_ENHANCED_JSON_ESCAPING=false

# Maximum command complexity level (1-5)
# Level 1: Basic commands only
# Level 3: Standard development commands (default)
# Level 5: Complex enterprise commands with advanced syntax
COMMAND_COMPLEXITY_LEVEL=3

# Enterprise command timeout in milliseconds (default: 1800000 = 30 minutes)
# Longer timeout for complex enterprise operations
ENTERPRISE_COMMAND_TIMEOUT=1800000

# Enable advanced logging for enterprise debugging
# Provides detailed command execution logs for troubleshooting
ENTERPRISE_DEBUG_LOGGING=false

# Cross-platform path normalization
# Automatically converts between Windows and Unix path formats
ENABLE_CROSS_PLATFORM_PATHS=false

# === Enterprise CI/CD Integration Settings ===
# GitHub Actions compatibility mode
# Optimizes server behavior for CI/CD environments
GITHUB_ACTIONS_MODE=false

# Docker container support
# Enables Docker-specific path handling and environment detection
DOCKER_CONTAINER_MODE=false

# Enterprise testing framework support
# Enables enhanced support for pytest, jest, and other testing frameworks
ENABLE_ENTERPRISE_TESTING=false

# Automatic dependency installation for testing
# When enabled, automatically installs test dependencies in virtual environments
AUTO_INSTALL_TEST_DEPS=false

# Allowed file extensions for Base64 encoding (comma-separated)
# Example: .pdf,.txt,.docx,.png,.jpg,.jpeg,.log
FILE_ENCODING_ALLOWED_EXTENSIONS=.pdf,.txt,.docx,.png,.jpg,.jpeg,.log

# === Dangerous Execution Mode ===
# ⚠️ WARNING: EXTREMELY DANGEROUS - ONLY FOR TRUSTED ENVIRONMENTS
# Enable unrestricted command execution (bypasses all security restrictions)
# This allows execution of ANY system command including:
# - System file deletion (rm -rf /, del /f /s /q C:\)
# - User management (net user, passwd)
# - Network configuration changes
# - Service management (sc, systemctl)
# - Registry modifications (reg add/delete)
# Set to 'true' ONLY if you fully trust all clients and understand the risks
ENABLE_DANGEROUS_MODE=false